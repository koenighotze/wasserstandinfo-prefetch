name: Deploy

on:
  workflow_dispatch:
    inputs:
      workspace_name:
        description: 'Terraform workspace name'
        required: true
        default: 'dev'
  workflow_run:
    workflows:
      - Build
    branches:
      - master
    types:
      - completed

jobs:
  bundle-and-upload:
    name: Bundle current lambda code and upload to bucket
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}         # pragma: allowlist secret
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # pragma: allowlist secret
      AWS_DEFAULT_REGION: eu-central-1
      APP_VERSION: ${{ github.ref }}
      TF_VAR_app_version: ${{ github.ref }}
      TF_VAR_commit_sha: ${{ github.sha }}
      TF_WORKSPACE: ${{ github.event.inputs.workspace_name || 'dev' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false

      - name: Init bootstrap
        working-directory: provision/bootstrap
        run: terraform init

      - name: Bundle code and dependencies
        run: ./scripts/bundle.sh

      - name: Init function
        working-directory: provision/function
        run: terraform init

      - name: Check if tag push
        id: tag_push_or_not
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=do_publish::true"

      - name: Plan function
        working-directory: provision/function
        run: terraform plan -input=false -no-color -out function.tfplan
        env:
          TF_VAR_publish: ${{ steps.tag_push_or_not.outputs.do_publish || false }}

      - name: Apply on master and tags
        working-directory: provision/function
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        run: terraform apply function.tfplan

  slack-workflow-status:
    name: Post CD Workflow Status To Slack
    runs-on: ubuntu-latest
    if: always()
    needs:
      - bundle-and-upload
    steps:
    - name: Slack Workflow Notification
      uses: rtCamp/action-slack-notify@v2@v2.2.0
      env:
        SLACK_CHANNEL: '#github'
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: ${{ github.workflow }}
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}



