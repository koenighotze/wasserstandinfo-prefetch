name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - CI 
      - Security scan
    branches: 
      - master
    types:
      - completed

jobs:
  bundle-and-upload:
    name: Bundle current lambda code and upload to bucket
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}         # pragma: allowlist secret
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # pragma: allowlist secret 
      AWS_DEFAULT_REGION: eu-central-1
      APP_VERSION: ${{ github.ref }}
      TF_VAR_app_version: ${{ github.ref }}
      TF_VAR_commit_sha: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false

      - name: Init bootstrap
        working-directory: provision/bootstrap
        run: terraform init

      - name: Bundle code and dependencies
        run: ./scripts/bundle.sh

      - name: Init function
        working-directory: provision/function
        run: terraform init

      - name: Check if tag push
        id: tag_push_or_not
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=do_publish::true"

      - name: Plan function
        working-directory: provision/function
        run: |
          echo "Deploying ${APP_VERSION} version"
          terraform plan -input=false -no-color -out function.tfplan
        env:
          TF_VAR_publish: ${{ steps.tag_push_or_not.outputs.do_publish || false }}
      
      - name: Apply on master and tags
        working-directory: provision/function
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        run: terraform apply function.tfplan

  slack-workflow-status:
    name: Post CD Workflow Status To Slack
    runs-on: ubuntu-latest
    if: always()
    needs:
      - bundle-and-upload
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@v1.0.1
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          channel: '#github'
          name: ${{ github.workflow }}
          icon_emoji: ':poop:'
      
