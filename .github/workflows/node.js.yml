name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]        
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Upload report to codacy
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_API_TOKEN }}
        coverage-reports: coverage/lcov.info
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Load dependencies
      run: npm ci

    - name: Lint source code
      run: npm run lint

    - name: Lint markdown
      uses: reviewdog/action-remark-lint@v2.0.0
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

    - name: shellcheck
      uses: reviewdog/action-shellcheck@v1
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        pattern: "*.sh" 

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: detect-secrets
      uses: reviewdog/action-detect-secrets@master
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        detect_secrets_flags: "--exclude-lines '.*\"integrity\": \"sha1-.*$'"

    - name: Scan for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    needs:
      - unit-test
      - lint
      - security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the lambda
        run: echo "This will build the lambda"
    
  slack-workflow-status:
    runs-on: ubuntu-latest
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@v1.0.1
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          channel: '#github'
          name: 'Wasserstand Workflow'
          icon_emoji: ':poop:'
      
