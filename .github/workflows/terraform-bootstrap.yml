name: Terraform bootstrap

on:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Terraform lint
      uses: reviewdog/action-tflint@v1.1.1
      with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Scan Terraform for vulnerabilities
      uses: reviewdog/action-tfsec@v1.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        fail_on_error: true

  plan:
    # if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # pragma: allowlist secret
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # pragma: allowlist secret 
      TF_LOG: INFO
      TF_INPUT: false
      TF_IN_AUTOMATION: true
    defaults:
      run: 
        working-directory: provision/bootstrap
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.4
        terraform_wrapper: false

    - name: Init
      run: terraform init

    - name: Plan
      run: terraform plan -input=false -no-color -out bootstrap.tfplan
      
    - name: Upload plan
      uses: actions/upload-artifact@v2
      with:
        name: Bootstrap plan
        path: provision/bootstrap/bootstrap.tfplan 
        if-no-files-found: error
        retention-days: 1

  apply:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: plan

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # pragma: allowlist secret
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # pragma: allowlist secret 
      TF_LOG: INFO
      TF_INPUT: false
      TF_IN_AUTOMATION: true
    defaults:
      run: 
        working-directory: provision/bootstrap

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.4
        terraform_wrapper: true

    - name: Init
      run: terraform init

    - name: Download plan
      uses: actions/download-artifact@v2
      with:
        name: Bootstrap plan
        path: provision/bootstrap/bootstrap.tfplan

    - name: show
      run: |
        terraform show

    - name: Apply
      run: |
        terraform apply --auto-approve bootstrap.tfplan
